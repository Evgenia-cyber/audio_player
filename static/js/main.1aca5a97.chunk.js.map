{"version":3,"sources":["components/SearchResult.jsx","components/Search.jsx","stores/db.js","stores/songsStore.js","stores/playerStore.js","stores/rootStore.js","components/SearchBlock.jsx","components/PrevButton.jsx","components/PlayButton.jsx","components/NextButton.jsx","components/PauseButton.jsx","components/PlayerButtons.jsx","components/VolumeButton.jsx","components/VolumeSlider.jsx","components/Volume.jsx","components/PlayTime.jsx","components/Player.jsx","App.js","index.js"],"names":["style","root","display","justifyContent","alignItems","padding","cursor","text","fontSize","observer","song","setCurrentSong","index","Paper","variant","onClick","runInAction","currentSong","id","src","author","songName","duration","Typography","gutterBottom","durationForDisplay","margin","input","flex","borderBottom","iconButton","Search","updateFilter","filter","setInitialPlayer","noValidate","autoComplete","InputBase","placeholder","autoFocus","value","onChange","event","inputValue","target","IconButton","type","aria-label","SONGS","configure","enforceActions","computedRequiresReaction","reactionRequiresObservable","observableRequiresReaction","SongsStore","rootStore","songs","secondsToTimeDisplay","minutes","Math","floor","seconds","inputText","makeObservable","this","observable","songsWithDurationForDisplay","computed","filteredSongs","action","map","findMatch","string","toLocaleLowerCase","indexOf","PlayerStore","isAnotherSong","isAnotherSongsList","isPlaying","currentSongDuration","currentSongCurrentTime","setInitial","songsStore","forEach","setIsAnotherSong","boolean","setIsAnotherSongsList","setIsPlaying","setNextSong","length","find","setPrevSong","songsLength","setCurrentSongDuration","setCurrentSongCurrentTime","currentTime","isLoop","currentSongDurationForDisplay","currentSongCurrentTimeForDisplay","RootStoreContext","React","createContext","RootStoreProvider","children","store","Provider","useRootStore","useContext","playerStore","align","onPrevBtnClick","color","component","disabled","PlayButton","onPlayBtnClick","isCanPlay","onNextBtnClick","PauseButton","onPauseBtnClick","Grid","item","VolumeButton","toggleVisibleOnClick","volume","VolumeSlider","handleVolumeChange","xs","Slider","aria-labelledby","min","max","step","Volume","useState","isVisible","setIsVisible","Fragment","flexBasis","mediaQuery","useMediaQuery","songRef","createRef","setIsCanPlay","setVolume","useEffect","current","load","play","catch","e","console","log","ref","loop","onCanPlayThrough","onLoadedMetadata","onTimeUpdate","onError","error","alert","onEnded","newValue","container","spacing","alignContent","pause","marginTop","CssBaseline","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aca5a97.chunk.js","sourcesContent":["import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { observer } from 'mobx-react';\r\nimport { runInAction } from 'mobx';\r\n\r\nconst style = {\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '0 10px',\r\n    cursor: 'pointer',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n  },\r\n};\r\n\r\nconst SearchResult = ({ song, setCurrentSong, index }) => {\r\n  const onSongClick = () => {\r\n    runInAction(() => {\r\n      const currentSong = {\r\n        id: song.id,\r\n        src: song.src,\r\n        author: song.author,\r\n        songName: song.songName,\r\n        duration: song.duration,\r\n        index: index,\r\n      };\r\n      setCurrentSong(currentSong);\r\n    });\r\n  };\r\n  return (\r\n    <Paper variant=\"outlined\" style={style.root} onClick={onSongClick}>\r\n      <Typography variant=\"subtitle1\" gutterBottom style={style.text}>\r\n        {song.author} - {song.songName}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom style={style.text}>\r\n        {song.durationForDisplay}\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default observer(SearchResult);\r\n","import React from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst style = {\r\n  root: {\r\n    margin: '20px 0',\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderBottom: '1px solid #000',\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n};\r\n\r\nconst Search = ({ updateFilter, filter,setInitialPlayer }) => {\r\n  const inputOnChange = (event) => {\r\n    const inputValue = event.target.value;\r\n    updateFilter(inputValue);\r\n    setInitialPlayer()\r\n  };\r\n  return (\r\n    <form noValidate autoComplete=\"off\" style={style.root}>\r\n      <InputBase\r\n        style={style.input}\r\n        placeholder=\"Search...\"\r\n        autoFocus\r\n        value={filter}\r\n        onChange={inputOnChange}\r\n      />\r\n      <IconButton type=\"submit\" style={style.iconButton} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export const SONGS = [\r\n  {\r\n    id: 0,\r\n    src:\r\n      'https://cdn-static.namobilu.com/u/ring/f/737/097/gayazov_brother_ya_ty_i_more.mp3',\r\n    author: 'Gayazov Brother',\r\n    songName: 'Я, ты и море',\r\n    duration: 23,\r\n  },\r\n  {\r\n    id: 1,\r\n    src: 'https://cdn-static.namobilu.com/u/ring/f/190/103/loboda_moloko.mp3',\r\n    author: 'Loboda',\r\n    songName: 'Moloko',\r\n    duration: 38,\r\n  },\r\n  {\r\n    id: 2,\r\n    src:\r\n      'https://cdn-static.namobilu.com/u/ring/f/452/099/maks_barskix_silence.mp3',\r\n    author: 'Maks Barskih',\r\n    songName: 'Silence',\r\n    duration: 37,\r\n  },\r\n  {\r\n    id: 3,\r\n    src: 'https://mp3uks.ru/mp3/files/niletto-lyubimka-mp3.mp3',\r\n    author: 'NILETTO',\r\n    songName: 'Любимка',\r\n    duration: 219,\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    src: '../../public/audio/shakira.mp3',\r\n    author: 'Shakira',\r\n    songName: 'La tortura',\r\n    duration: 211,\r\n  },\r\n  {\r\n    id: 5,\r\n    src: '../../public/audio/whenever.mp3',\r\n    author: 'Shakira',\r\n    songName: 'Whenever',\r\n    duration: 150,\r\n  },\r\n  {\r\n    id: 6,\r\n    src:\r\n      'https://cdn3.sefon.pro/prev/2IPOExs8B9BQwrjbJGa_uQ/1613176188/167/%D0%9F%D0%B8%D1%86%D1%86%D0%B0%20-%20%D0%A3%D0%BB%D1%8B%D0%B1%D0%BA%D0%B0%20%28192kbps%29.mp3',\r\n    author: 'Пицца',\r\n    songName: 'Улыбка',\r\n    duration: 184,\r\n  },\r\n];\r\n","import {\r\n  action,\r\n  computed,\r\n  configure,\r\n  makeObservable,\r\n  observable,\r\n  runInAction,\r\n} from 'mobx';\r\nimport { SONGS } from './db';\r\n\r\nconfigure({\r\n  enforceActions: 'always',\r\n  computedRequiresReaction: true,\r\n  reactionRequiresObservable: true,\r\n  observableRequiresReaction: true,\r\n});\r\n\r\nexport default class SongsStore {\r\n  // @observable\r\n  songs = SONGS;\r\n  filter = '';\r\n\r\n  secondsToTimeDisplay = (duration) => {\r\n    let minutes = Math.floor(duration / 60);\r\n    let seconds = Math.floor(duration % 60);\r\n    if (minutes < 10) {\r\n      minutes = '0' + minutes;\r\n    }\r\n    if (seconds < 10) {\r\n      seconds = '0' + seconds;\r\n    }\r\n    return minutes + ':' + seconds;\r\n  };\r\n\r\n  // @computed\r\n  get songsWithDurationForDisplay() {\r\n    return this.songs.map((song) => {\r\n      runInAction(() => {\r\n        song.durationForDisplay = this.secondsToTimeDisplay(song.duration);\r\n      });\r\n      return song;\r\n    });\r\n  }\r\n\r\n  get filteredSongs() {\r\n    const findMatch = (string, filter) => {\r\n      const match = string.toLocaleLowerCase().indexOf(filter);\r\n      return match === -1 ? false : true;\r\n    };\r\n\r\n    return this.songsWithDurationForDisplay.filter(\r\n      (song) =>\r\n        findMatch(song.author, this.filter) ||\r\n        findMatch(song.songName, this.filter),\r\n    );\r\n  }\r\n\r\n  constructor(rootStore) {\r\n    makeObservable(this, {\r\n      songs: observable,\r\n      filter: observable,\r\n      songsWithDurationForDisplay: computed,\r\n      filteredSongs: computed,\r\n      updateFilter: action,\r\n    });\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  //@action\r\n  updateFilter = (inputText) => {\r\n    this.filter = inputText;\r\n  };\r\n}\r\n","import { action, computed, configure, makeObservable, observable } from 'mobx';\r\n\r\nconfigure({\r\n  enforceActions: 'always',\r\n  computedRequiresReaction: true,\r\n  reactionRequiresObservable: true,\r\n  observableRequiresReaction: true,\r\n});\r\n\r\nexport default class PlayerStore {\r\n  // @observable\r\n  songs = [];\r\n  currentSong = {};\r\n  isAnotherSong = false;\r\n  isAnotherSongsList = false;\r\n  isPlaying = false;\r\n  currentSongDuration = 0;\r\n  currentSongCurrentTime = 0;\r\n\r\n  // @computed\r\n  get isLoop() {\r\n    return this.songs.length === 1 ? true : false;\r\n  }\r\n  get currentSongDurationForDisplay() {\r\n    return this.rootStore.songsStore.secondsToTimeDisplay(\r\n      this.currentSongDuration,\r\n    );\r\n  }\r\n  get currentSongCurrentTimeForDisplay() {\r\n    return this.rootStore.songsStore.secondsToTimeDisplay(\r\n      this.currentSongCurrentTime,\r\n    );\r\n  }\r\n\r\n  constructor(rootStore) {\r\n    makeObservable(this, {\r\n      songs: observable,\r\n      currentSong: observable,\r\n      isAnotherSong: observable,\r\n      isAnotherSongsList: observable,\r\n      isPlaying: observable,\r\n      currentSongDuration: observable,\r\n      currentSongCurrentTime: observable,\r\n      isLoop: computed,\r\n      currentSongDurationForDisplay: computed,\r\n      currentSongCurrentTimeForDisplay: computed,\r\n      setInitial: action,\r\n      setCurrentSong: action,\r\n      setIsAnotherSong: action,\r\n      setIsAnotherSongsList: action,\r\n      setIsPlaying: action,\r\n      setNextSong: action,\r\n      setPrevSong: action,\r\n      setCurrentSongDuration: action,\r\n      setCurrentSongCurrentTime: action,\r\n    });\r\n    this.rootStore = rootStore;\r\n    this.setInitial();\r\n  }\r\n\r\n  //@action\r\n  setInitial = () => {\r\n    this.songs = this.rootStore.songsStore.filteredSongs;\r\n    this.songs.forEach((song, index) => {\r\n      song.index = index;\r\n    });\r\n    this.currentSong = this.songs[0];\r\n    this.isAnotherSongsList = true;\r\n    this.isPlaying = false;\r\n  };\r\n  setCurrentSong = (song) => {\r\n    this.currentSong = song;\r\n    this.isAnotherSong = true;\r\n  };\r\n  setIsAnotherSong = (boolean) => {\r\n    this.isAnotherSong = boolean;\r\n  };\r\n  setIsAnotherSongsList = (boolean) => {\r\n    this.isAnotherSongsList = boolean;\r\n  };\r\n  setIsPlaying = (boolean) => {\r\n    this.isPlaying = boolean;\r\n  };\r\n  setNextSong = () => {\r\n    if (this.currentSong.index === this.songs.length - 1) {\r\n      this.currentSong = this.songs[0];\r\n    } else {\r\n      this.currentSong = this.songs.find(\r\n        (song, index) => index === this.currentSong.index + 1,\r\n      );\r\n    }\r\n    this.isAnotherSong = true;\r\n  };\r\n  setPrevSong = () => {\r\n    if (this.currentSong.index === 0) {\r\n      const songsLength = this.songs.length;\r\n      this.currentSong = this.songs[songsLength - 1];\r\n    } else {\r\n      this.currentSong = this.songs.find(\r\n        (song, index) => index === this.currentSong.index - 1,\r\n      );\r\n    }\r\n    this.isAnotherSong = true;\r\n  };\r\n  setCurrentSongDuration = (duration) => {\r\n    this.currentSongDuration = duration;\r\n  };\r\n  setCurrentSongCurrentTime = (currentTime) => {\r\n    this.currentSongCurrentTime = currentTime;\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport SongsStore from './songsStore';\r\nimport PlayerStore from './playerStore';\r\n\r\nexport default class RootStore {\r\n  constructor() {\r\n    this.songsStore = new SongsStore(this);\r\n    this.playerStore = new PlayerStore(this);\r\n  }\r\n}\r\n\r\n/* Store helpers */\r\nconst RootStoreContext = React.createContext();\r\n\r\nexport const RootStoreProvider = ({ children, store }) => {\r\n  return (\r\n    <RootStoreContext.Provider value={store}>\r\n      {children}\r\n    </RootStoreContext.Provider>\r\n  );\r\n};\r\n\r\n/* Hook to use store in any functional component */\r\nexport const useRootStore = () => React.useContext(RootStoreContext);\r\n\r\n/* HOC to inject store to any functional or class component */\r\nexport const withRootStore = (Component) => (props) => {\r\n  return <Component {...props} store={useRootStore()} />;\r\n};\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport SearchResult from './SearchResult';\r\nimport Search from './Search';\r\nimport { useRootStore } from '../stores/rootStore';\r\n\r\nconst style = {\r\n  text: {\r\n    fontSize: 20,\r\n  },\r\n};\r\n\r\nconst SearchBlock = () => {\r\n  const store = useRootStore();\r\n\r\n  return (\r\n    <>\r\n      <Search\r\n        updateFilter={store.songsStore.updateFilter}\r\n        filter={store.songsStore.filter}\r\n        setInitialPlayer={store.playerStore.setInitial}\r\n      />\r\n      {store.songsStore.filteredSongs.length !== 0 ? (\r\n        store.songsStore.filteredSongs.map((song, index) => (\r\n          <SearchResult\r\n            key={song.id}\r\n            song={song}\r\n            setCurrentSong={store.playerStore.setCurrentSong}\r\n            index={index}\r\n          />\r\n        ))\r\n      ) : (\r\n        <Paper variant=\"outlined\">\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            gutterBottom\r\n            align=\"center\"\r\n            style={style.text}\r\n          >\r\n            Unfortunately, your search returned no results...\r\n          </Typography>\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(SearchBlock);\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst PrevButton = ({ onPrevBtnClick,  store }) => {\r\n  return (\r\n    <IconButton\r\n      color=\"primary\"\r\n      aria-label=\"upload picture\"\r\n      component=\"span\"\r\n      disabled={store.playerStore.isLoop}\r\n      onClick={onPrevBtnClick}\r\n    >\r\n      <SkipPreviousIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default observer(PrevButton);\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\nconst PlayButton = ({ onPlayBtnClick, isCanPlay }) => {\r\n  return (\r\n    <IconButton\r\n      color=\"primary\"\r\n      aria-label=\"upload picture\"\r\n      component=\"span\"\r\n      onClick={onPlayBtnClick}\r\n      disabled={!isCanPlay}\r\n    >\r\n      <PlayArrowIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default PlayButton;\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst NextButton = ({ onNextBtnClick, store}) => {\r\n  return (\r\n    <IconButton\r\n      color=\"primary\"\r\n      aria-label=\"upload picture\"\r\n      component=\"span\"\r\n      disabled={store.playerStore.isLoop}\r\n      onClick={onNextBtnClick}\r\n    >\r\n      <SkipNextIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default observer(NextButton);\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nconst PauseButton = ({ onPauseBtnClick }) => {\r\n  return (\r\n    <IconButton\r\n      color=\"primary\"\r\n      aria-label=\"upload picture\"\r\n      component=\"span\"\r\n      onClick={onPauseBtnClick}\r\n    >\r\n      <PauseIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default PauseButton;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport PrevButton from './PrevButton';\r\nimport PlayButton from './PlayButton';\r\nimport NextButton from './NextButton';\r\nimport PauseButton from './PauseButton';\r\nimport { observer } from 'mobx-react';\r\n\r\n  const PlayerButtons = ({\r\n    onPlayBtnClick,\r\n    isCanPlay,\r\n    onPauseBtnClick,\r\n    onNextBtnClick,\r\n    onPrevBtnClick,\r\n    store\r\n  }) => {\r\n  return (\r\n    <Grid item>\r\n      <PrevButton onPrevBtnClick={onPrevBtnClick} store={store}/>\r\n      {store.playerStore.isPlaying ? (\r\n        <PauseButton onPauseBtnClick={onPauseBtnClick} />\r\n      ) : (\r\n        <PlayButton onPlayBtnClick={onPlayBtnClick} isCanPlay={isCanPlay} />\r\n      )}\r\n      <NextButton onNextBtnClick={onNextBtnClick} store={store}/>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(PlayerButtons);\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VolumeDown from '@material-ui/icons/VolumeDown';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\n\r\nconst VolumeButton = ({ toggleVisibleOnClick, volume }) => {\r\n  return (\r\n    <Grid item>\r\n      <IconButton\r\n        onClick={toggleVisibleOnClick}\r\n        color=\"primary\"\r\n        aria-label=\"upload picture\"\r\n        component=\"span\"\r\n      >\r\n        {volume === 0 ? <VolumeOffIcon /> : <VolumeDown />}\r\n      </IconButton>\r\n    </Grid>\r\n  );\r\n};\r\nexport default VolumeButton;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst VolumeSlider = ({handleVolumeChange,volume}) => {\r\n\r\n  return (\r\n    <Grid item xs={3}>\r\n      <Slider\r\n        value={volume}\r\n        onChange={handleVolumeChange}\r\n        aria-labelledby=\"continuous-slider\"\r\n        min={0}\r\n        max={100}\r\n        step={1}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default VolumeSlider;\r\n","import React from 'react';\r\n\r\nimport VolumeButton from './VolumeButton';\r\nimport VolumeSlider from './VolumeSlider';\r\n\r\nconst Volume = ({handleVolumeChange,volume}) => {\r\n  const [isVisible, setIsVisible] = React.useState(false);\r\n\r\n  const toggleVisibleOnClick = () => {\r\n    setIsVisible((isVisible) => !isVisible);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <VolumeButton toggleVisibleOnClick={toggleVisibleOnClick} volume={volume}/>\r\n      {isVisible && <VolumeSlider handleVolumeChange={handleVolumeChange} volume={volume}/>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Volume;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst style = {\r\n  root: {\r\n    flexBasis: '100%',\r\n  },\r\n};\r\n\r\nconst PlayTime = ({ store }) => {\r\n  const mediaQuery = useMediaQuery('(max-width:470px)');\r\n  return (\r\n    <Grid item style={mediaQuery ? style.root : {}}>\r\n      <span>{store.playerStore.currentSongCurrentTimeForDisplay}</span>\r\n      <span>/</span>\r\n      <span>{store.playerStore.currentSongDurationForDisplay}</span>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(PlayTime);\r\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { observer } from 'mobx-react';\nimport { runInAction } from 'mobx';\n\nimport PlayerButtons from './PlayerButtons';\nimport Volume from './Volume';\nimport PlayTime from './PlayTime';\nimport { useRootStore } from '../stores/rootStore';\n\nconst Player = () => {\n  const store = useRootStore();\n\n  const songRef = React.createRef();\n\n  const [isCanPlay, setIsCanPlay] = React.useState(false);\n  const [volume, setVolume] = React.useState(50);\n  const handleVolumeChange = (event, newValue) => {\n    setVolume(newValue);\n  };\n\n  React.useEffect(() => {\n    songRef.current.volume = volume / 100;\n  }, [songRef, volume]);\n\n  React.useEffect(() => {\n    runInAction(() => {\n      if (store.playerStore.isAnotherSong) {\n        songRef.current.load();\n        songRef.current.play().catch((e) => {\n          console.log(e); /* error handler (for firefox)*/\n        });\n        store.playerStore.setIsPlaying(true);\n        store.playerStore.setIsAnotherSong(false);\n      }\n    });\n  }, [store.playerStore, songRef]);\n  React.useEffect(() => {\n    runInAction(() => {\n      if (store.playerStore.isAnotherSongsList) {\n        songRef.current.load();\n        store.playerStore.setIsAnotherSongsList(false);\n      }\n    });\n  }, [store.playerStore, songRef]);\n\n  const onPlayBtnClick = () => {\n    songRef.current.play().catch((e) => {\n      console.log(e); /* error handler (for firefox)*/\n    });\n    runInAction(() => {\n      store.playerStore.setIsPlaying(true);\n    });\n  };\n  const onPauseBtnClick = () => {\n    songRef.current.pause();\n    runInAction(() => {\n      store.playerStore.setIsPlaying(false);\n    });\n  };\n  const onNextBtnClick = () => {\n    runInAction(() => {\n      store.playerStore.setNextSong();\n    });\n  };\n  const onPrevBtnClick = () => {\n    runInAction(() => {\n      store.playerStore.setPrevSong();\n    });\n  };\n\n  const handleSongSliderCurrentTimeChange = (event, newValue) => {\n    store.playerStore.setCurrentSongCurrentTime(newValue);\n    songRef.current.currentTime = newValue;\n  };\n  const handleOnCanPlayThrough = () => {\n    setIsCanPlay(true);\n  };\n  const handleOnLoadedMetadata = () => {\n    store.playerStore.setCurrentSongDuration(songRef.current.duration);\n  };\n  const handleOnTimeUpdate = () => {\n    store.playerStore.setCurrentSongCurrentTime(songRef.current.currentTime);\n  };\n  const handleOnEnded = () => {\n    store.playerStore.setNextSong();\n  };\n  const handleOnError = (e) => {\n    console.error('handleOnError in <audio/> in Player.jsx');\n    console.log(e);\n    alert('This song is not available! Select another song.');\n  };\n  return (\n    <>\n      <Typography variant=\"h5\" gutterBottom>\n        {store.playerStore.currentSong.author} -{' '}\n        {store.playerStore.currentSong.songName}\n      </Typography>\n      <audio\n        ref={songRef}\n        loop={store.playerStore.isLoop}\n        onCanPlayThrough={handleOnCanPlayThrough}\n        onLoadedMetadata={handleOnLoadedMetadata}\n        onTimeUpdate={handleOnTimeUpdate}\n        onError={handleOnError}\n        onEnded={handleOnEnded}\n      >\n        <source src={store.playerStore.currentSong.src} type=\"audio/mpeg\" />\n        <p>Ваш браузер не может воспроизвести аудиозапись.</p>\n      </audio>\n      <Slider\n        value={store.playerStore.currentSongCurrentTime}\n        onChange={handleSongSliderCurrentTimeChange}\n        aria-labelledby=\"continuous-slider\"\n        min={0}\n        max={store.playerStore.currentSongDuration}\n        step={0.01}\n      />\n      <Grid container spacing={1} alignItems=\"center\" alignContent=\"flex-start\">\n        <PlayerButtons\n          onPlayBtnClick={onPlayBtnClick}\n          isCanPlay={isCanPlay}\n          onPauseBtnClick={onPauseBtnClick}\n          onNextBtnClick={onNextBtnClick}\n          onPrevBtnClick={onPrevBtnClick}\n          store={store}\n        />\n        <Volume handleVolumeChange={handleVolumeChange} volume={volume} />\n        <PlayTime store={store} />\n      </Grid>\n    </>\n  );\n};\n\nexport default observer(Player);\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { observer } from 'mobx-react';\n\nimport SearchBlock from './components/SearchBlock';\nimport Player from './components/Player';\nimport { useRootStore } from './stores/rootStore';\n\n\nconst style = {\n  container: {\n    marginTop: 50,\n  },\n};\n\nfunction App() {\n  const store = useRootStore();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container component=\"main\" maxWidth=\"sm\" style={style.container}>\n        {store.playerStore.songs.length !== 0 && <Player />}\n        <SearchBlock />\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default observer(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport RootStore, { RootStoreProvider } from './stores/rootStore';\n\nconst store = new RootStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootStoreProvider store={store}>\n      <App />\n    </RootStoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}